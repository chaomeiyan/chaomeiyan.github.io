<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>置顶</title>
      <link href="/9999/02/09/%E7%BD%AE%E9%A1%B6/"/>
      <url>/9999/02/09/%E7%BD%AE%E9%A1%B6/</url>
      
        <content type="html"><![CDATA[<h3 id="博客会记录一些课程笔记和课程实验报告，还有一些技术类文章和生活类文章，欢迎参观！"><a href="#博客会记录一些课程笔记和课程实验报告，还有一些技术类文章和生活类文章，欢迎参观！" class="headerlink" title="博客会记录一些课程笔记和课程实验报告，还有一些技术类文章和生活类文章，欢迎参观！"></a>博客会记录一些课程笔记和课程实验报告，还有一些技术类文章和生活类文章，欢迎参观！</h3>]]></content>
      
      
      
        <tags>
            
            <tag> 置顶 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ACM入门</title>
      <link href="/2020/02/09/ACM%E5%85%A5%E9%97%A8/"/>
      <url>/2020/02/09/ACM%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<p>作者：数学lover<br>链接：<a href="https://www.zhihu.com/question/51727516/answer/127265733" target="_blank" rel="noopener">https://www.zhihu.com/question/51727516/answer/127265733</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><p>一般的入门顺序：</p><ol start="0"><li><p>C语言的基本语法(或者直接开C++也行，当一个java选手可能会更受欢迎，并且以后工作好找，但是难度有点大)，【参考书籍：刘汝佳的《算法竞赛入门经典》，C++入门可以考虑《c++ primer plus》，java选手可以考虑《think in java》or中文版《java编程思想》，请远离谭浩强…】<br>可以选择切一些特别水的题巩固以及适应一下ACM中常见的输入输出格式…例如杭电著名的100题 <a href="https://link.zhihu.com/?target=http%3A//acm.hdu.edu.cn/listproblem.php%3Fvol%3D11">Problem Set</a></p><a id="more"></a></li><li><p>一些基本算法和数据结构(队列 栈 树 图 并查集 堆 DFS BFS 最短路 最小生成树 拓扑排序 动态规划 贪心 搜索 KMP 哈希 Trie AC自动机 快速幂 逆元 费马小定理 欧拉函数 素数筛 分解质因数)你可以找两个小伙伴一起分工合作，各自认领专题【参考书籍：刘汝佳《算法竞赛入门经典第二版》or《算法竞赛训练手册》，《算法导论》】这时候可以刷的题就多了，你可以选择一些专题进行突破，学习一下技巧 例如<br><a href="https://link.zhihu.com/?target=http%3A//vjudge.net/contest/65959%23overview">[kuangbin带你飞]专题一 简单搜索</a><br><a href="https://link.zhihu.com/?target=http%3A//vjudge.net/contest/66569%23overview">[kuangbin带你飞]专题四 最短路练习</a><br><a href="https://link.zhihu.com/?target=http%3A//vjudge.net/contest/66964%23overview">[kuangbin带你飞]专题五 并查集</a><br><a href="https://link.zhihu.com/?target=http%3A//vjudge.net/contest/66965%23overview">[kuangbin带你飞]专题六 最小生成树 </a><br><a href="https://link.zhihu.com/?target=http%3A//vjudge.net/contest/68966%23overview">[kuangbin带你飞]专题十二 基础DP1</a><br><a href="https://link.zhihu.com/?target=http%3A//vjudge.net/contest/70017%23overview">[kuangbin带你飞]专题十四 数论基础</a><br><a href="https://link.zhihu.com/?target=http%3A//vjudge.net/contest/70325%23overview">[kuangbin带你飞]专题十六 KMP &amp; 扩展KMP &amp; Manacher</a><br><a href="https://link.zhihu.com/?target=http%3A//vjudge.net/contest/70326%23overview">[kuangbin带你飞]专题十七 AC自动机</a><br>如果这些你和你的小伙伴都能熟悉掌握，并且能够尽快写出来，那么没有意外的话就可以在网络赛中拿到现场赛的门票（当然还得看出题人的风格…）</p><ol start="2"><li>一些进阶的算法以及复杂一些的数据结构（树状数组 线段树 平衡树 后缀数组 二分图匹配 网络流 费用流 割点 桥 强联通 双联通 最近公共祖先 四大DP(数位dp 区间dp 状压dp 概率dp)  博弈论SG函数 ）<br>【参考资料：各种博客……】<br><a href="https://link.zhihu.com/?target=http%3A//vjudge.net/contest/66989%23overview">[kuangbin带你飞]专题七 线段树</a><br><a href="https://link.zhihu.com/?target=http%3A//vjudge.net/contest/67418%23overview">[kuangbin带你飞]专题九 连通图</a><br><a href="https://link.zhihu.com/?target=http%3A//vjudge.net/contest/68127%23overview">[kuangbin带你飞]专题十 匹配问题</a><br><a href="https://link.zhihu.com/?target=http%3A//vjudge.net/contest/68128%23overview">[kuangbin带你飞]专题十一 网络流</a><br><a href="https://link.zhihu.com/?target=http%3A//vjudge.net/contest/70324%23overview">[kuangbin带你飞]专题十五 数位DP</a><br><a href="https://link.zhihu.com/?target=http%3A//vjudge.net/contest/70655%23overview">[kuangbin带你飞]专题十八 后缀数组</a><br><a href="https://link.zhihu.com/?target=http%3A//vjudge.net/contest/76505%23overview">[kuangbin带你飞]专题二十一 概率&amp;期望</a><br><a href="https://link.zhihu.com/?target=http%3A//vjudge.net/contest/77874%23overview">[kuangbin带你飞]专题二十二 区间DP</a><br>这些掌握之后在现场赛中拿到牌子应该就没什么问题了，发挥出色还能拿到银牌。。。不过如果遇到比较凶残的赛区…<br>2.5 这时候如果开始组队了，就可以去刷一些套题了，例如<a href="https://link.zhihu.com/?target=http%3A//vjudge.net/contest%23contestType%3D1%26contestRunningStatus%3D3%26contestOpenness%3D0%26title%3D%26manager%3D">Contests - Virtual Judge </a><br>这里每一场比赛都是过去真实发生的录像，你可以clone之后和自己的队友一起实操一下。</li></ol></li><li><p>更高深的技巧，更复杂的数据结构（树链剖分，动态树，可持久化线段树，DLX，后缀自动机，回文树，斜率优化/单调队列优化/四边形优化DP，插头dp，莫比乌斯反演……）<br>这部分最能体现人与人的差异了…智商碾压一般就在这部分。而要想拿到金牌，一般来说这些知识都要尽可能掌握。<br>【参考资料：各种论文，解题报告】<br>这部分的题目比较杂，因此请自行去vjudge上查找….</p></li><li><p>5 同2.5，并且中国国内的比赛如果已经满足不了你，你可以去<a href="https://link.zhihu.com/?target=https%3A//icpcarchive.ecs.baylor.edu/index.php">https://icpcarchive.ecs.baylor.edu/index.php</a> 或者<a href="https://link.zhihu.com/?target=http%3A//codeforces.com/gyms">Gym - Codeforces</a>上找到全世界的区域赛的题目，不过题解就不怎么保证了…</p></li></ol><p>也许你会觉得性价比很低，学这么多东西，才”有可能”拿到牌子，但是收获的不一定是物质的牌子，还有学习过程的苦辣酸甜的经历（例如各种WA TLE RE MLE 之后的一次AC），还有和基友一起并肩作战切套题的同甘共苦，而且还锻炼了自己的学习能力（善用百度，谷歌，维基百科）。<br>所以<br>Good Luck and Have Fun.<br>===============我是WA和AC之间的分割线===============<br>这些算法都是说着容易，但是灵活搭配用起来难，然后还能在一定时间内写出来，并顺利通过数据测试拿到AC更难。<br>由于大家手上的模板越来越强大，区域赛一般都不会出现裸的模板题了，一旦出现，肯定就是被大家骂回家的存在。所以在综合训练的过程中，尽量选择需要动脑的题目，不要一昧追求直接贴一个模板上来AC走人特别爽的题目。<br>一般比较需要动脑的题目类型：贪心，动态规划（最好需要加上优化的），组合数学（推组合数公式，各种等价变换），图论（网络流，最短路，匹配）的各种建图过程。。。<br>虽然说年轻人要少水群，多做题，才能进Finals——kuangbin<br>但是一直闭门单刷也不是一件好事，还是要和大家多多交流心得，这样才能避免自己陷入一个瓶颈。</p><p>作者：匿名用户<br>链接：<a href="https://www.zhihu.com/question/51727516/answer/127318167" target="_blank" rel="noopener">https://www.zhihu.com/question/51727516/answer/127318167</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><p>本人背景：大学之前没有搞过竞赛，天赋一般，今年大三出去比赛，今年（2016）区域赛铜。<br>经过一段时间的反思，结合自己这两年ACM训练就“请问ACM的正确入门方式是什么？” 发表一点拙见</p><p>目录</p><ol start="0"><li>预备知识</li><li>基础部分</li><li>进阶</li><li>做题</li><li>训练</li><li>杂谈</li></ol><p>注：本人对于掌握内容的等级由高到低分为：精通、掌握、了解</p><p><strong>0 预备知识</strong><br><strong>0.1 C++基础语法部分</strong><br>想要入门ACM，首先你要有一定的编程基础，一般国内的ACM选手都是用C++的，所以C++的基本语法你应该有所了解。</p><h6 id="0-1-1-库函数的了解"><a href="#0-1-1-库函数的了解" class="headerlink" title="0.1.1 库函数的了解"></a>0.1.1 库函数的了解</h6><p>包括但不限于这些库（头文件）：基本输入输出 如cstdio, iostream，以及一些从C的库弄过来的像cstring, cctype,cmath等库，具体可以随便百度一个人的代码，然后看看他的头文件</p><h6 id="0-1-2-基础知识"><a href="#0-1-2-基础知识" class="headerlink" title="0.1.2 基础知识"></a>0.1.2 基础知识</h6><p>如int的最大值是多少？int占多少内存？逻辑运算，循环等，不一一赘述。值得一提的是位运算，应当了解电脑中数据的存储方式，很多时候利用位运算帮助做题非常重要，如树状数组的lowbit，状压DP，快速幂等，每次我看到这些的时候都深深的感受到二进制的神奇。</p><p><strong>0.2 C++ STL</strong><br>非常有用的STL 如algorithm, vector, list, set, stack, queue, map等，对于STL的学习，本人推荐曾棕根老师的这本书《ACM程序设计》 <a href="https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1bpxa6qb">下载链接</a>，建议初学者了解每一个容器都有什么样的方法以及各个方法的<strong>时间复杂度</strong>。不同的容器利用了不同的数据结构，所以做出相应的操作对于系统的时间开销就大不相同，这点还是挺重要的。原来做一道题，网上看有人用vector TLE了，ctrl+f把所有的vector换成list就过了。</p><p><strong>0.3 Java基础</strong><br>个人感觉Java并不常用，当然Java中的<strong>BigInteger类（高精度整数）</strong>是非常有用的，一般情况下，当别人苦逼的粘贴C++的大数类研究方法的时候，Java可以十行代码优雅的解决问题，同时建议稍微学习一下BigDecimal类。</p><p><strong>0.4 时间复杂度和空间复杂度的计算</strong><br>时间复杂度是一个非常重要的概念，相同的问题，有的人给出的方法需要1s，有的人给出的方法需要1h，那必然是1s的方案在时间方面更优。<br>空间复杂度同理，如果空间很大，用不完，可以考虑<strong>使用空间换取时间</strong>的方式，很多算法都是以这个为前提的。<br>研究一下为什么很多题给的数据是10^5？一般题给出时间是1s，有的给出2s, 3s 甚至15s，是否能给你想法上的暗示？空间复杂度同理。</p><p><strong>0.5 ACM中的基本错误</strong><br>Wrong Answer： 有自己没有注意到的细节，或者方法错了。<br>TLE： 运行时间超过给出时间<br>CE：编译错误，可以点进去看<br>RE：有时候会stack overflow，access violation之类的<br>PE：空格或者回车有问题</p><p><strong>1 基础知识</strong><br>大一的时候一开始就学了二分/三分，BFS、DFS去找迷宫路径，当时只能循规蹈矩的改模版，当时并不懂栈（stack）和队列（queue），每次都要纠结一下是FIFO还是FILO。后来做着做着题，发现，像BFS、DFS这种东西，完全就是个思想啊，哪里有什么模版。此时，我大概可以随手写一些深搜、广搜了，但是我对于这些的应用还是不太敏感，只有多做题才能一直提醒自己灵活的运用这些。</p><p>所以，上面这段话，我想表达这样一个事情：基础要学好，达到<strong>精通</strong>的程度，并且要多做题，每一种要做20道题左右。（本人训练的时候大概是10题的样子，但是感觉并不够，所以建议20道）</p><p>基础的内容：<br>BFS、DFS、二分、三分、筛法求素数、快速幂、并查集、矩阵运算及快速幂、最短路相关（Dijkstra， floyd，ford，</p><p>SPFA</p><p>）、基础DP（LIS、LCS、记忆化搜索等）、网络流（EK、Dinic、ISAP+gap）、KMP、线段树、树状数组、二分图、最小生成树（Prim、Kruskal）、计算几何基础等</p><p>按照紫书上的来吧，题主看紫书觉得很吃力，其实说实话，我本人看紫书也挺吃力的，建议先从Vjudge上找相关专题做，比如高票答案推荐的kuangbin带你飞系列的，HDU的题个人感觉比UVA要简单一些。</p><p><strong>2. 进阶</strong><br>这个阶段其实就可以和队友分工搞了，推荐<strong>参考白书以及多校训练</strong>。</p><p>我个人对这个阶段的建议是：<strong>一部分内容学会用板子，大概知道板子每一步在干什么，达到了解的程度。一部分内容要掌握原理。</strong>如果实在不知道在干什么，就当用黑箱一样去用。就像你知道cmath里有sqrt，但是很多人完全不知道是怎么实现的。</p><p>像很多数论的东西，比如Lucas，你会用模版大概就可以了，这种东西几乎没有什么改的必要，但是了解一下什么时候用lucas求组合数，什么时候打表求组合数之类的还是很有必要的，对于不同情形应使用不同的方法。</p><p>但是对于像莫比乌斯反演、sg函数这种东西，经常就需要对于具体情况分析，然后将思想运用到代码中。</p><p>还有一些比较中立的，比如Tarjan求联通分量的，改的虽然不多，直接用板子，但是可以存储很多信息，如无向图割点、桥，以及对于强联通分量、双联通分量能发挥不同的功能。只能靠做题量去学习姿势。</p><p><strong>3. 做题</strong><br>ACM我一直觉得非常靠天赋，对于自己这样天赋一般的人，某些选手简直是智商碾压般的存在。后来发现也不尽然，人家天赋高，做一道题付出的时间相对于自己短，相同的时间可以做更多的题，所以强者更强，弱的还是原来的水平。所以，不管你的天赋强弱，多做题吧，付出和收获都是成正比的，天赋的高低的区别只在于将你的收获乘以0.8还是乘以1.2。比如一个天赋很强的人，做了400道题，那么相当于一个普通人做了400 * 1.2 = 480题的水平，对于天赋差一点的人来讲，就要做480 / 0.8 = 600题。大部分人的智商都是差不多的，真正强的人都是做题做出来的，我个人不太相信有谁看一眼C++的语法就能想出来个主席树、莫队算法的，当达到量的高度以后自然会有质的飞跃。BestCoder上的<a href="https://link.zhihu.com/?target=http%3A//bestcoder.hdu.edu.cn/rating.php%3Fuser%3Ddoubility">Rating - doubility</a>，我一天无意间看到了人家在Vjudge上的做题量1748，<a href="https://link.zhihu.com/?target=http%3A//vjudge.net/user/doubility">doubility’s profile</a>。Q神，BNU做题量1715，<a href="https://link.zhihu.com/?target=https%3A//www.bnuoj.com/v3/userinfo.php%3Fname%3Dquailty">Information of quailty</a>。以上两人还仅限于一个平台，并不知道其他平台还有多少题。就我个人而言，只做了570题的水平，其中还包括很多水题。听学长说叉姐的做题量大概是五位数，甚至六位数，所以也并不奇怪人家那么强。在普通人智商差不多的情况下，比赛时金银铜大概都是按做题量分配的，这种大家都喝了无数碗的鸡汤，咱们再干一碗。</p><p>回到正题，打开ACM的正确方式：<br><strong>刷题，BestCoder开了有几十场了，CodeForces有几百场，你做了多少了？</strong></p><p><strong>4. 训练</strong><br>个人的意志力太薄弱，如果有机会的话还是组队训练吧。有组织的训练至少有竞争，有压力。赛后尽可能的AK比赛的题，当时我平时训练的时候没有ak，现在回想起来，陷入了不会，下次遇到还不会，再遇到还不会的循环。</p><p>组队的话尽可能强强联手吧，大家合作拿一个大奖才是最好的结果。当队友心猿意马的时候确实挺让人泄气的，举个杭电某队的例子。</p><blockquote><p>G题因为题意问题，加上我太蠢没有学会潜在坑点分析+脑补。<br>加上B题我没有担当起责任，没有解放队友，导致最终打了个铜。</p><p>主要原因还是自己太弱。<br>争取在上海的时候拿个金，至少正常水平发挥拿到ECfinal参赛权。<br>队友一个进过WF没了干劲，另外一个想要找工作，也没了热情。虽然他们水平很厉害，但希望在明年，能够不再和”马上打比赛的时候嘴里却喊着退役，什么结果都无所谓的人”组队，消极的队友，会带给你一种无力感，真的很累很累。其实还不如单挑，虽然名次会变低，但是至少充满斗志和热情。</p><p>转自 <a href="https://link.zhihu.com/?target=http%3A//blog.csdn.net/snowy_smile/article/details/49450163">2015沈阳赛区总结 与 简单题题解</a></p></blockquote><p><strong>5. 杂谈</strong><br>\1. 善用搜索引擎吧，有时候Google和百度搜出来的题解不一样，虽然我也不知道他们是怎么排名的。看别人的代码总会发现新姿势。在这里推荐一个利益无关的搜索引擎：<a href="https://link.zhihu.com/?target=http%3A//byr.wiki">Byr.wiki·北邮人导航</a><br>\2. 写写题解，整理个自己的模版，其实别人能搜到自己的题解和模版，感觉还是挺开心的<br>\3. 别自欺欺人的拿天赋说事了，以绝大部分人努力程度之低，完全到不了拼天赋的地步。沉下心，踏踏实实的学，把紫书白书好好看，做足够量的BC/CF题。<br>\4. 只有自己足够强，才能和足够强的人组队，才能比赛拿牌<br>\5. 高票答案谈到性价比，其实我自己也不知道ACM的性价比怎么样，但是大学里，有个事做总是好的吧？<br>\6. 原来在网上看到过一篇<a href="https://link.zhihu.com/?target=http%3A//blog.csdn.net/sjf0115/article/details/8664562">ACM进阶之路</a>，供大家参考</p><p>每次查题解的时候总可以看到两句话，无耻的摘录了<br>\1. “每一次AC都是一次感动” 这个似乎是一个CSDN博主的名字<br>\2. “人一我百！人十我万！永不放弃<del>~</del>怀着自信的心，去追逐梦想。” –kuangbin</p>]]></content>
      
      
      
        <tags>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
